name: CI-Test

on:
#  push:
#    branches: [main]

  workflow_dispatch:


jobs:
  test-cpptest:
    name: Analyze project with C/C++test
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Generate BDF
      env:
        CPPTEST_SCAN_PROJECT_NAME: ./FlowAnalysis
      run: |
        & "C:\Program Files\Parasoft\C++test\10.5\cpptesttrace.exe" make all
      working-directory: ./FlowAnalysis

    - name: Run C++test
      # Use the 'run-cpptest-action' GitHub Action.
      uses: parasoft/run-cpptest-action@1.0.1
      with:
        installDir: 'C:\Program Files\Parasoft\C++test\10.5'
        compilerConfig: 'gcc_6-64'
        testConfig: 'builtin://MISRA C 2012'
        reportFormat: xml,html,custom
        input: './FlowAnalysis/cpptestscan.bdf'
        # For Standard
         # additionalParams: '-property report.custom.extension=sarif -property report.custom.xsl.file=${PARASOFT_SARIF_XSL}'
         # commandLinePattern : ' ${cpptestcli} -data ../workspace -config "${testConfig}" -report "${reportDir}" -bdf "${input}" ${additionalParams} '
        additionalParams: '-localsettings ./settings/ls.properties'
        commandLinePattern: '${cpptestcli} -data ../workspace -config "${testConfig}" -report "${reportDir}" -bdf "${input}" ${additionalParams}'

    # Uploads analysis results in the SARIF format, so that they are displayed as GitHub code scanning alerts.
    - name: Upload results (SARIF)
      if: always()
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: reports/report.sarif
    
    # Uploads an archive that includes all report files (.xml, .html, .sarif).
    - name: Archive reports
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Static analysis reports
        path: reports/*.*
        
